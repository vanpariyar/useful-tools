{"version":3,"sources":["components/supportComponent.js","components/ageDifferenceCalculator.js","components/navbar.js","components/sanitizeTitleTool.js","components/speechRecognitionTool.js","components/sumYourTimeFromRecap.js","App.js","serviceWorker.js","index.js"],"names":["SupportComponent","className","href","AgeDifferenceCalculator","useState","Date","now","currentDate","setCurrentDate","birthDate","setBirthDate","diffrence","setDiffrence","useEffect","timeDiffrence","getTime","year","Math","floor","month","days","total","htmlFor","type","id","placeholder","defaultValue","onChange","e","target","value","Navbar","menuStatus","setMenuStatus","onClick","rel","SanitizeTitleTool","text","setText","str","replace","toLowerCase","from","i","l","length","RegExp","charAt","string_to_slug","rows","SpeechRecognitionTool","recognition","window","SpeechRecognition","webkitSpeechRecognition","mozSpeechRecognition","msSpeechRecognition","lang","interimResults","maxAlternatives","start","onresult","event","results","transcript","navigator","clipboard","writeText","SumYourTimeFromRecap","recapText","setRecapText","totalTime","setTotalTime","times","match","reduce","currentValue","startTime","endTime","max","a","split","b","isNaN","parseInt","hours","minutes","seconds","m","h","slice","addTimes","App","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.92af3b98.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function SupportComponent() {\n    return (\n        <div>\n            <p className=\"pt-3\">\n                <strong>\n                    Love this tool ? <a href=\"https://www.buymeacoffee.com/vanpariyar\">Support</a>\n                </strong>\n            </p>\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport SupportComponent from './supportComponent';\n\nexport default function AgeDifferenceCalculator() {\n\n    const [currentDate, setCurrentDate] = useState(Date.now());\n    const [birthDate, setBirthDate] = useState(Date.now());\n    const [diffrence, setDiffrence] = useState(0);\n    const ONE_DAY = 1000 * 60 * 60 * 24;\n    const ONE_MONTH = 1000 * 3600 * 24 * 12;\n    \n    useEffect(() => {\n        setDiffrence( () => {\n            let timeDiffrence = (new Date(currentDate) - new Date(birthDate).getTime());\n            let year = Math.floor( timeDiffrence / 3.15576e+10);\n            let month = Math.floor( timeDiffrence / ONE_MONTH);\n            let days = Math.floor( timeDiffrence / ONE_DAY);\n            //let diffrenceMonth = Math.floor( new Date( timeDiffrence ).getMonth() )\n            let total = `${year} years`; \n            return { \n                year: year, \n                month: month , \n                days: days,\n                total: total,\n            }\n        });\n    }, [birthDate, currentDate, ONE_MONTH, ONE_DAY])\n\n    return (\n        <div className=\"card mb-5\">\n            <h5 className=\"card-header bg-primary text-white\">Age Diffrece Calculator</h5>\n            <div className=\"card-body\">\n                <div className=\"form-group\">\n                    <label htmlFor=\"titleBox1\">Current Date</label>\n                    <input \n                        type=\"date\" \n                        className=\"form-control\" \n                        id=\"titleBox1\" \n                        placeholder=\"Enter Text / string to sanitize\" \n                        defaultValue={ currentDate }\n                        onChange={ (e) => setCurrentDate( e.target.value ) }\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"titleBox\">Birth Date</label>\n                    <input \n                        type=\"date\" \n                        className=\"form-control\" \n                        id=\"titleBox\" \n                        placeholder=\"Enter Text / string to sanitize\" \n                        defaultValue={ birthDate }\n                        onChange={ (e) => setBirthDate( e.target.value ) }\n                    />\n                </div>\n                <p>Diffrence Total { diffrence.total } </p>\n                <p>Diffrence in Year { diffrence.year } </p>\n                <p>Diffrence in months { diffrence.month } </p>\n                <p>Diffrence in Days { diffrence.days } </p>\n\n                <SupportComponent />\n            </div>\n        </div>\n    )\n}\n","import React, { useState } from 'react'\n\nexport default function Navbar() {\n    const [menuStatus, setMenuStatus] = useState(0);\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n            <a href=\"./\" className=\"navbar-brand\">Useful Tools</a>\n            <button \n                className=\"navbar-toggler\" \n                type=\"button\" \n                onClick={ ()=>setMenuStatus( !menuStatus )  }\n            >\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div \n                className= { (menuStatus) ? \"collapse navbar-collapse show\" : \"collapse navbar-collapse\" } \n                id=\"navbarNav\">\n                <ul className=\"navbar-nav\">\n                <li className=\"nav-item active\">\n                    <a href=\"#home\" className=\"nav-link\">Home <span className=\"sr-only\">(current)</span></a>\n                </li>\n                <li className=\"nav-item\">\n                    <a href=\"https://github.com/vanpariyar/useful-tools/\" className=\"nav-link\" >Features</a>\n                </li>\n                <li className=\"nav-item\">\n                    <a href=\"https://vanpariyar.github.io/about/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"nav-link\">Contact</a>\n                </li>\n                </ul>\n            </div>\n        </nav>\n    )\n}\n","import React, { useState }from 'react'\nimport SupportComponent from './supportComponent';\n\nexport default function SanitizeTitleTool() {\n\n\n    const string_to_slug = function (str)\n    {\n        str = str.replace(/^\\s+|\\s+$/g, ''); // trim\n        str = str.toLowerCase();\n\n        // remove accents, swap ñ for n, etc\n        const from = \"àáäâèéëêìíïîòóöôùúüûñçěščřžýúůďťň·/_,:;\";\n        const to   = \"aaaaeeeeiiiioooouuuuncescrzyuudtn------\";\n\n        for (let i=0, l=from.length ; i<l ; i++)\n        {\n            str = str.replace(new RegExp(from.charAt(i), 'g'), to.charAt(i));\n        }\n\n        str = str.replace('.', '-') // replace a dot by a dash \n            .replace(/[^a-z0-9 -]/g, '') // remove invalid chars\n            .replace(/\\s+/g, '-') // collapse whitespace and replace by a dash\n            .replace(/-+/g, '-') // collapse dashes\n            .replace( /\\//g, '' ); // collapse all forward-slashes\n\n        return str;\n    }\n    const [text, setText] = useState('');\n\n    return (\n        <div className=\"card\">\n            <h5 className=\"card-header bg-primary text-white\">Santize Title</h5>\n            <div className=\"card-body\">\n                <div className=\"form-group\">\n                    <label htmlFor=\"titleBox\">Add String / Text to sanitize</label>\n                    <input \n                        type=\"text\" \n                        className=\"form-control\" \n                        id=\"titleBox\" \n                        placeholder=\"Enter Text / string to sanitize\" \n                        value={ text }\n                        onChange={ (e) => setText( e.target.value ) }\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"exampleFormControlTextarea1\">Your Text</label>\n                    <textarea \n                        defaultValue={ string_to_slug( text ) } \n                        className=\"form-control\" \n                        id=\"exampleFormControlTextarea1\" \n                        rows=\"3\">\n                        \n                    </textarea>\n                </div>\n                <SupportComponent />\n            </div>\n        </div>\n    )\n}\n","import React , { useState } from 'react'\nimport SupportComponent from './supportComponent';\n\nexport default function SpeechRecognitionTool() {\n    \n    const[ text, setText ] = useState('')\n\n    const handleSpeech = () => {\n        let recognition = new (window.SpeechRecognition || window.webkitSpeechRecognition || window.mozSpeechRecognition || window.msSpeechRecognition)();\n        recognition.lang = 'en-US';\n        recognition.interimResults = false;\n        recognition.maxAlternatives = 5;\n        recognition.start();\n\n        recognition.onresult = function(event) {\n            // console.log('You said: ', event.results[0][0].transcript);\n            setText( text+\" \"+event.results[0][0].transcript);\n        };\n    }\n\n    return (\n        <div className=\"card mt-5 mb-5\">\n            <h5 className=\"card-header bg-primary text-white\">Speech Recognition Tool</h5>\n            <div className=\"card-body\">\n                <div className=\"form-group\">\n                    <label htmlFor=\"exampleFormControlTextarea1\">Your Text</label>\n                    <textarea \n                        defaultValue={ text } \n                        className=\"form-control\" \n                        id=\"exampleFormControlTextarea1\" \n                        rows=\"3\"\n                        onChange = { (e) => setText( e.target.value ) }\n                        >\n                    </textarea>\n                </div>\n                <div className=\"form-group\">\n                    <button \n                        className=\"btn btn-primary\"\n                        onClick={ handleSpeech } \n                        >\n                        Click To Listen Text\n                    </button>\n                    \n                    <button \n                        className=\"btn btn-info ml-2\"\n                        onClick={() =>  navigator.clipboard.writeText(text)}\n                        >\n                        Copy Text\n                    </button>\n                    <SupportComponent />\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport SupportComponent from './supportComponent';\n\nexport default function SumYourTimeFromRecap() {\n    const [recapText, setRecapText] = useState('10:20 \\n 0:30 10:20');\n    const [totalTime, setTotalTime] = useState('Add Recap Text');\n\n    useEffect( () => {\n        let regularExpression = /\\d{1,}:\\d{2}/g;\n        let times;\n        times = recapText.match(regularExpression);\n        times =  times ? times.reduce((total, currentValue) => total = addTimes(total, currentValue)) : times;\n        setTotalTime(times);\n    },[recapText]);\n    \n\n    function addTimes(startTime, endTime) {\n        var times = [ 0, 0, 0 ]\n        var max = times.length\n\n        var a = (startTime || '').split(':')\n        var b = (endTime || '').split(':')\n\n        // normalize time values\n        for (var i = 0; i < max; i++) {\n            a[i] = isNaN(parseInt(a[i])) ? 0 : parseInt(a[i])\n            b[i] = isNaN(parseInt(b[i])) ? 0 : parseInt(b[i])\n        }\n\n        // store time values\n        for (i = 0; i < max; i++) {\n            times[i] = a[i] + b[i]\n        }\n\n        var hours = times[0]\n        var minutes = times[1]\n        var seconds = times[2]\n\n        if (seconds >= 60) {\n            var m = (seconds / 60) << 0\n            minutes += m\n            seconds -= 60 * m\n        }\n\n        if (minutes >= 60) {\n            var h = (minutes / 60) << 0\n            hours += h\n            minutes -= 60 * h\n        }\n\n        return ('0' + hours).slice(-2) + ':' + ('0' + minutes).slice(-2) + ':' + ('0' + seconds).slice(-2)\n    }\n\n    return (\n        <div className=\"card mt-5 mb-5\">\n            <h5 className=\"card-header bg-primary text-white\">Recap Text To Total Time Converter</h5>\n            <div className=\"card-body\">\n                <div className=\"form-group\">\n                    <label htmlFor=\"exampleFormControlTextarea1\">Your Text</label>\n                    <textarea \n                        defaultValue={ recapText } \n                        className=\"form-control\" \n                        id=\"exampleFormControlTextarea1\" \n                        rows=\"3\"\n                        onChange = { (e) => setRecapText( e.target.value ) }\n                        >\n                    </textarea>\n                </div>\n                <div className=\"form-group\">\n                    <div>\n                        <p>\n                            Your Total Time &nbsp;    \n                            <strong>\n                                { totalTime }\n                            </strong>\n                        </p>    \n                    </div>\n                    <button \n                        className=\"btn btn-info ml-2\"\n                        onClick={() =>  navigator.clipboard.writeText(totalTime)}\n                        >\n                        Copy Time\n                    </button>\n\n                    <SupportComponent />\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport './App.css';\nimport './bootstrap.min.css'\nimport AgeDifferenceCalculator from './components/ageDifferenceCalculator';\nimport Navbar from './components/navbar'; \nimport SanitizeTitleTool from './components/sanitizeTitleTool';\nimport SpeechRecognitionTool from './components/speechRecognitionTool'\nimport SumYourTimeFromRecap from './components/sumYourTimeFromRecap';\n\n\nfunction App() {\n  return (\n    <div className=\"\">\n      <Navbar />\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-sm-3\"></div>\n          <div className=\"col-sm-6 mt-5\">\n           <SanitizeTitleTool /> \n           <SpeechRecognitionTool /> \n           <SumYourTimeFromRecap />\n           <AgeDifferenceCalculator />\n          </div>\n          <div className=\"col-sm-3\"></div>\n        </div>\n      </div>  \n    </div>\n  );\n}\n\nexport default App;\n    \n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}